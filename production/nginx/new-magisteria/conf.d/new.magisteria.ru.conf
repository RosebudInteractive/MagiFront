    upstream magisteria_upstream {
        # server localhost:3000;
        server 127.0.0.1:3001;
        server 127.0.0.1:3002;
        server 127.0.0.1:3003;
        server 127.0.0.1:3004;
    }

    server {
#        listen       [::]:80 default_server;
        server_name  new.magisteria.ru;
        client_max_body_size 128m;
        root         /var/www/sites/magisteria/MagisteriaTwo;

        set $static_internal data-internal;
        set $download_internal download-internal;
    
        # Load configuration files for the default server block.
        # include /etc/nginx/default.d/*.conf;

        location ~* "^/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/"
        {
            #
            # prevent attacks to node instances
            # ex: GET /2D1C4FA9-117C-C34D-A0B2-1AA57EEF3E67/websocket?url=https%3A%2F%2Fmagisteria.ru%2Fdostoevsky%2Ffantastic%3Ffbclid%3DIwAR2-
            #
            return 501;
        }

        location /feed/zen
        {
            root /var/www/sites/magisteria/feed;
            try_files /yandex-zen.xml =404;
        }

        location /feed
        {
            root /var/www/sites/magisteria/feed;
            try_files /magisteria-rss.xml =404;
        }

        location /doc
        {
#            root /var/www/sites/magisteria/MagisteriaTwo/static-files;
            root /var/www/sites/magisteria/src/node-v12/MagisteriaTwo/static-files;
            try_files $uri =404;
        }

        location /pricelist/fb
        {
            root /var/www/sites/magisteria;
            try_files $uri =404;
        }

        location ~ ^/.*sitemap.*.xsl
        {
            root /var/www/sites/magisteria/sitemaps/xsl;
            try_files $uri =404;
        }

        location ~ ^/(robots.txt|.*sitemap.*.xml)
        {
            root /var/www/sites/magisteria/sitemaps;
            try_files $uri =404;
        }

        location ~ ^/(sp-push-manifest.json|sp-push-worker.js|sp-push-worker-fb.js)
        {
            root /var/www/sites/magisteria/push-plugin;
            try_files $uri =404;
        }

        location ~ ^/(assets|fonts|scripts|static)/
        {
            add_header Cache-Control no-cache; # development config
#            root /var/www/sites/magisteria/MagisteriaTwo;
            root /var/www/sites/magisteria/src/node-v12/MagisteriaTwo;
            try_files $uri =404;
        }

        location ~ ^/(images|css)/
        {
            add_header Cache-Control no-cache; # development config
#            root /var/www/sites/magisteria/MagisteriaTwo;
            root /var/www/sites/magisteria/src/node-v12/MagisteriaTwo;
            try_files $uri /assets/$uri =404;
        }

        location ~ ^/_dwld_/ {

            set $request_filtered $request;
            if ($request_filtered ~ (.*)token=[^&]*(.*)) { 
                set $request_filtered $1token=***$2;
            }
            set $http_referer_filtered $http_referer;
            if ($http_referer_filtered ~ (.*)token=[^&]*(.*)) { 
                set $http_referer_filtered $1token=***$2;
            }
            access_log  /var/log/nginx/access.log  filtered;

    	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    	    proxy_set_header Host $http_host;
    	    proxy_set_header X-Forwarded-Proto $scheme;
    	    proxy_set_header X-NginX-Proxy true;
    	    proxy_set_header X-NginX-Static $download_internal;
	    proxy_set_header X-Real-IP $remote_addr;
    	    proxy_http_version 1.1;
    	    proxy_set_header Upgrade $http_upgrade;
    	    proxy_set_header Connection "upgrade";
    	    proxy_max_temp_file_size 0;
    	    proxy_pass http://magisteria_upstream;
    	    proxy_redirect off;
    	    proxy_read_timeout 240s;
        }

        location /download-internal/ { # unfortunately can't use variable "$download_internal" here
           internal;

limit_rate 500k;
limit_conn addr 10;

            set $request_filtered $request;
            if ($request_filtered ~ (.*)token=[^&]*(.*)) { 
                set $request_filtered $1token=***$2;
            }
            set $http_referer_filtered $http_referer;
            if ($http_referer_filtered ~ (.*)token=[^&]*(.*)) { 
                set $http_referer_filtered $1token=***$2;
            }
            access_log  /var/log/nginx/access.log  filtered;

           alias /var/www/sites/magisteria/uploads/; #note the trailing slash
           add_header Access-Control-Allow-Origin "*";
           add_header Access-Control-Allow-Methods "POST, GET, PUT, PATCH, DELETE, OPTIONS";
           add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept, Authorization, Token";
           add_header Access-Control-Max-Age "1728000";
        }

        location / {
            # auth_basic "Restrict zone";
            # auth_basic_user_file  /usr/share/nginx/html/.htpasswd;

            set $request_filtered $request;
            if ($request_filtered ~ (.*)token=[^&]*(.*)) { 
                set $request_filtered $1token=***$2;
            }
            set $http_referer_filtered $http_referer;
            if ($http_referer_filtered ~ (.*)token=[^&]*(.*)) { 
                set $http_referer_filtered $1token=***$2;
            }
            access_log  /var/log/nginx/access.log  filtered;

    	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    	    proxy_set_header Host $http_host;
    	    proxy_set_header X-Forwarded-Proto $scheme;
    	    proxy_set_header X-NginX-Proxy true;
    	    proxy_set_header X-NginX-Static $static_internal;
	    proxy_set_header X-Real-IP $remote_addr;
    	    proxy_http_version 1.1;
    	    proxy_set_header Upgrade $http_upgrade;
    	    proxy_set_header Connection "upgrade";
    	    proxy_max_temp_file_size 0;
    	    proxy_pass http://magisteria_upstream/;
    	    proxy_redirect off;
    	    proxy_read_timeout 240s;
        }

        location /data-internal/ { # unfortunately can't use variable "$static_internal" here
           internal;

            set $request_filtered $request;
            if ($request_filtered ~ (.*)token=[^&]*(.*)) { 
                set $request_filtered $1token=***$2;
            }
            set $http_referer_filtered $http_referer;
            if ($http_referer_filtered ~ (.*)token=[^&]*(.*)) { 
                set $http_referer_filtered $1token=***$2;
            }
            access_log  /var/log/nginx/access.log  filtered;

           alias /var/www/sites/magisteria/uploads/; #note the trailing slash
           add_header Access-Control-Allow-Origin "*";
           add_header Access-Control-Allow-Methods "POST, GET, PUT, PATCH, DELETE, OPTIONS";
           add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept, Authorization, Token";
           add_header Access-Control-Max-Age "1728000";
        }

        #
        # Should be commented to avoid resolving to "/" location
        #
        #error_page 404 /404.html;
        #    location = /40x.html {
        #}
        #
        #error_page 500 502 503 504 /50x.html;
        #    location = /50x.html {
        #}
    
    listen 443 ssl http2; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/new.magisteria.ru/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/new.magisteria.ru/privkey.pem; # managed by Certbot
#    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
#    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot











}

    server {
    if ($host = new.magisteria.ru) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen       80 default_server;
        server_name  new.magisteria.ru;
    return 404; # managed by Certbot

}
